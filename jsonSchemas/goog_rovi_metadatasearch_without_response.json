{
    "kind": "discovery#restDescription",
    "discoveryVersion": "v1",
    "title": "Metadata and Search API",
    "description": "World-class entertainment metadata provides rich information about TV, music, and movies.",
    "protocol": "rest",
    "name": "metadataandsearchapi",
    "version": "1.0",
    "basePath": "/",
    "rootUrl": "http://api.rovicorp.com/",
    "servicePath": "/",
    "baseUrl": "http://api.rovicorp.com//",
    "resources": {
        "Movie": {
            "methods": {
                "Info": {
                    "path": "data/v1/movie/info",
                    "httpMethod": "GET",
                    "description": "Returns basic information about a movie or TV series. Please set a value for movie, or cosmoid, or movieid. Fields in bold are required.",
                    "parameters": {
                        "movie": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Keywords from title of the movie or TV series",
                            "location": "query"
                        },
                        "cosmoid": {
                            "type": "integer",
                            "required": false,
                            "default": "",
                            "description": "Cosmo database ID for a movie or television series. Cosmo is a database of television information.",
                            "location": "query"
                        },
                        "movieid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID of a movie or TV series, consisting of the letter V followed by 9 digits with leading spaces.",
                            "location": "query"
                        },
                        "include": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Other Movie Service requests to include in the request. For multiple includes, separate the values with commas like this: crew,images.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Movie.Info"
                },
                "Cast": {
                    "path": "data/v1/movie/cast",
                    "httpMethod": "GET",
                    "description": "Returns information about cast members with links to images. Please set a value for movie, or cosmoid, or movieid. Fields in bold are required.",
                    "parameters": {
                        "movie": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Keywords from title of the movie or TV series",
                            "location": "query"
                        },
                        "cosmoid": {
                            "type": "integer",
                            "required": false,
                            "default": "",
                            "description": "Cosmo database ID for a movie or television series. Cosmo is a database of television information.",
                            "location": "query"
                        },
                        "movieid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID of a movie or TV series, consisting of the letter V followed by 9 digits with leading spaces.",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Movie.Cast"
                },
                "Crew": {
                    "path": "data/v1/movie/crew",
                    "httpMethod": "GET",
                    "description": "Returns information about crew members with links to images. Please set a value for movie, or cosmoid, or movieid. Fields in bold are required.",
                    "parameters": {
                        "movie": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Keywords from title of the movie or TV series",
                            "location": "query"
                        },
                        "cosmoid": {
                            "type": "integer",
                            "required": false,
                            "default": "",
                            "description": "Cosmo database ID for a movie or television series. Cosmo is a database of television information.",
                            "location": "query"
                        },
                        "movieid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID of a movie or TV series, consisting of the letter V followed by 9 digits with leading spaces.",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Movie.Crew"
                },
                "Images": {
                    "path": "data/v1/movie/images",
                    "httpMethod": "GET",
                    "description": "Returns URLs to images of a movie along with associated image information. Note: Access to images is governed by your subscription level and geographical location. Please set a value for movie, or cosmoid, or movieid. Fields in bold are required.",
                    "parameters": {
                        "movie": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Keywords from title of the movie or TV series",
                            "location": "query"
                        },
                        "cosmoid": {
                            "type": "integer",
                            "required": false,
                            "default": "",
                            "description": "Cosmo database ID for a movie or television series. Cosmo is a database of television information.",
                            "location": "query"
                        },
                        "movieid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID of a movie or TV series, consisting of the letter V followed by 9 digits with leading spaces.",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Movie.Images"
                },
                "Keywords": {
                    "path": "data/v1/movie/keywords",
                    "httpMethod": "GET",
                    "description": "Returns keywords that apply to a movie and weightings that reflect the relative importance of each keyword. Please set a value for movie, or cosmoid, or movieid. Fields in bold are required.",
                    "parameters": {
                        "movie": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Keywords from title of the movie or TV series",
                            "location": "query"
                        },
                        "cosmoid": {
                            "type": "integer",
                            "required": false,
                            "default": "",
                            "description": "Cosmo database ID for a movie or television series. Cosmo is a database of television information.",
                            "location": "query"
                        },
                        "movieid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID of a movie or TV series, consisting of the letter V followed by 9 digits with leading spaces.",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Movie.Keywords"
                },
                "Moods": {
                    "path": "data/v1/movie/moods",
                    "httpMethod": "GET",
                    "description": "Returns keywords that apply to a movie and weightings that reflect the relative importance of each keyword. Please set a value for movie, or cosmoid, or movieid. Fields in bold are required.",
                    "parameters": {
                        "movie": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Keywords from title of the movie or TV series",
                            "location": "query"
                        },
                        "cosmoid": {
                            "type": "integer",
                            "required": false,
                            "default": "",
                            "description": "Cosmo database ID for a movie or television series. Cosmo is a database of television information.",
                            "location": "query"
                        },
                        "movieid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID of a movie or TV series, consisting of the letter V followed by 9 digits with leading spaces.",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Movie.Moods"
                },
                "Related": {
                    "path": "data/v1/movie/related",
                    "httpMethod": "GET",
                    "description": "Returns titles of movies that are related to a movie specified in the request. Please set a value for movie, or cosmoid, or movieid. Fields in bold are required.",
                    "parameters": {
                        "movie": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Keywords from title of the movie or TV series",
                            "location": "query"
                        },
                        "cosmoid": {
                            "type": "integer",
                            "required": false,
                            "default": "",
                            "description": "Cosmo database ID for a movie or television series. Cosmo is a database of television information.",
                            "location": "query"
                        },
                        "movieid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID of a movie or TV series, consisting of the letter V followed by 9 digits with leading spaces.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Movie.Related"
                },
                "Releases": {
                    "path": "data/v1/movie/releases",
                    "httpMethod": "GET",
                    "description": "Returns information about DVDs, Blu-rays, and other movie releases. Please set a value for movie, or cosmoid, or movieid. Fields in bold are required.",
                    "parameters": {
                        "movie": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Keywords from title of the movie or TV series",
                            "location": "query"
                        },
                        "cosmoid": {
                            "type": "integer",
                            "required": false,
                            "default": "",
                            "description": "Cosmo database ID for a movie or television series. Cosmo is a database of television information.",
                            "location": "query"
                        },
                        "movieid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID of a movie or TV series, consisting of the letter V followed by 9 digits with leading spaces.",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Movie.Releases"
                },
                "Review": {
                    "path": "data/v1/movie/review",
                    "httpMethod": "GET",
                    "description": "Returns a review of a movie. Please set a value for movie, or cosmoid, or movieid. Fields in bold are required.",
                    "parameters": {
                        "movie": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Keywords from title of the movie or TV series",
                            "location": "query"
                        },
                        "cosmoid": {
                            "type": "integer",
                            "required": false,
                            "default": "",
                            "description": "Cosmo database ID for a movie or television series. Cosmo is a database of television information.",
                            "location": "query"
                        },
                        "movieid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID of a movie or TV series, consisting of the letter V followed by 9 digits with leading spaces.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Movie.Review"
                },
                "Synopsis": {
                    "path": "data/v1/movie/synopsis",
                    "httpMethod": "GET",
                    "description": "Returns a synopsis of the plot and the name of the author. Please set a value for movie, or cosmoid, or movieid. Fields in bold are required.",
                    "parameters": {
                        "movie": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Keywords from title of the movie or TV series",
                            "location": "query"
                        },
                        "cosmoid": {
                            "type": "integer",
                            "required": false,
                            "default": "",
                            "description": "Cosmo database ID for a movie or television series. Cosmo is a database of television information.",
                            "location": "query"
                        },
                        "movieid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID of a movie or TV series, consisting of the letter V followed by 9 digits with leading spaces.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Movie.Synopsis"
                },
                "Themes": {
                    "path": "data/v1/movie/themes",
                    "httpMethod": "GET",
                    "description": "Returns a list of topics and circumstances that motivate or fit with a movie, along with weightings that reflect the relative importance of each. Please set a value for movie, or cosmoid, or movieid. Fields in bold are required.",
                    "parameters": {
                        "movie": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Keywords from title of the movie or TV series",
                            "location": "query"
                        },
                        "cosmoid": {
                            "type": "integer",
                            "required": false,
                            "default": "",
                            "description": "Cosmo database ID for a movie or television series. Cosmo is a database of television information.",
                            "location": "query"
                        },
                        "movieid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID of a movie or TV series, consisting of the letter V followed by 9 digits with leading spaces.",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Movie.Themes"
                },
                "Tones": {
                    "path": "data/v1/movie/tones",
                    "httpMethod": "GET",
                    "description": "Returns a list of feelings that motivate or fit with the movie or TV series, along with weightings that reflect the relative importance of each. Please set a value for movie, or cosmoid, or movieid. Fields in bold are required.",
                    "parameters": {
                        "movie": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Keywords from title of the movie or TV series",
                            "location": "query"
                        },
                        "cosmoid": {
                            "type": "integer",
                            "required": false,
                            "default": "",
                            "description": "Cosmo database ID for a movie or television series. Cosmo is a database of television information.",
                            "location": "query"
                        },
                        "movieid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID of a movie or TV series, consisting of the letter V followed by 9 digits with leading spaces.",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Movie.Tones"
                },
                "Types": {
                    "path": "data/v1/movie/types",
                    "httpMethod": "GET",
                    "description": "Returns movie subgenres that apply to the movie, along with weightings that reflect the relative importance of each. Please set a value for movie, or cosmoid, or movieid. Fields in bold are required.",
                    "parameters": {
                        "movie": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Keywords from title of the movie or TV series",
                            "location": "query"
                        },
                        "cosmoid": {
                            "type": "integer",
                            "required": false,
                            "default": "",
                            "description": "Cosmo database ID for a movie or television series. Cosmo is a database of television information.",
                            "location": "query"
                        },
                        "movieid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID of a movie or TV series, consisting of the letter V followed by 9 digits with leading spaces.",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Movie.Types"
                },
                "Videos": {
                    "path": "data/v1/movie/videos",
                    "httpMethod": "GET",
                    "description": "Returns data for constructing links to movie trailers. Please set a value for movie, or cosmoid, or movieid. Fields in bold are required.",
                    "parameters": {
                        "movie": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Keywords from title of the movie or TV series",
                            "location": "query"
                        },
                        "cosmoid": {
                            "type": "integer",
                            "required": false,
                            "default": "",
                            "description": "Cosmo database ID for a movie or television series. Cosmo is a database of television information.",
                            "location": "query"
                        },
                        "movieid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID of a movie or TV series, consisting of the letter V followed by 9 digits with leading spaces.",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Movie.Videos"
                }
            }
        },
        "MovieRelease": {
            "methods": {
                "Info": {
                    "path": "data/v1/movierelease/info",
                    "httpMethod": "GET",
                    "description": "Returns basic information about a movie release. Please set a value for upcid or moviereleaseid. Fields in bold are required.",
                    "parameters": {
                        "moviereleaseid": {
                            "type": "integer",
                            "required": false,
                            "default": "",
                            "description": "ID of a movie release",
                            "location": "query"
                        },
                        "upcid": {
                            "type": "integer",
                            "required": false,
                            "default": "",
                            "description": "Universal Product Code for an item",
                            "location": "query"
                        },
                        "include": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Any other Movie Release requests to include in the request. For multiple includes, separate the values with commas like this: description,images.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "MovieRelease.Info"
                },
                "Description": {
                    "path": "data/v1/movierelease/description",
                    "httpMethod": "GET",
                    "description": "Returns the description of a movie release. Please set a value for upcid or moviereleaseid. Fields in bold are required.",
                    "parameters": {
                        "moviereleaseid": {
                            "type": "integer",
                            "required": false,
                            "default": "",
                            "description": "ID of a movie release",
                            "location": "query"
                        },
                        "upcid": {
                            "type": "integer",
                            "required": false,
                            "default": "",
                            "description": "Universal Product Code for an item",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "MovieRelease.Description"
                },
                "Features": {
                    "path": "data/v1/movierelease/features",
                    "httpMethod": "GET",
                    "description": "Returns the description of a movie release. Please set a value for upcid or moviereleaseid. Fields in bold are required. Fields in bold are required.",
                    "parameters": {
                        "moviereleaseid": {
                            "type": "integer",
                            "required": false,
                            "default": "",
                            "description": "ID of a movie release",
                            "location": "query"
                        },
                        "upcid": {
                            "type": "integer",
                            "required": false,
                            "default": "",
                            "description": "Universal Product Code for an item",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "MovieRelease.Features"
                },
                "Images": {
                    "path": "data/v1/movierelease/images",
                    "httpMethod": "GET",
                    "description": "Returns URLs to images of a movie release along with associated image information. Note: Access to images is governed by your subscription level and geographical location. Please set a value for upcid or moviereleaseid. Fields in bold are required.",
                    "parameters": {
                        "moviereleaseid": {
                            "type": "integer",
                            "required": false,
                            "default": "",
                            "description": "ID of a movie release",
                            "location": "query"
                        },
                        "upcid": {
                            "type": "integer",
                            "required": false,
                            "default": "",
                            "description": "Universal Product Code for an item",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "MovieRelease.Images"
                },
                "Videos": {
                    "path": "data/v1/movierelease/videos",
                    "httpMethod": "GET",
                    "description": "Returns data for constructing links to trailers of a movie release. Please set a value for upcid or moviereleaseid. Fields in bold are required.",
                    "parameters": {
                        "moviereleaseid": {
                            "type": "integer",
                            "required": false,
                            "default": "",
                            "description": "ID of a movie release",
                            "location": "query"
                        },
                        "upcid": {
                            "type": "integer",
                            "required": false,
                            "default": "",
                            "description": "Universal Product Code for an item",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "MovieRelease.Videos"
                }
            }
        },
        "Album": {
            "methods": {
                "Info": {
                    "path": "data/v1/album/info",
                    "httpMethod": "GET",
                    "description": "Returns basic information about an album. Please set a value for album, albumid, amgpopid, or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "album": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Keywords from the album title",
                            "location": "query"
                        },
                        "albumid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for an album, consisting of the prefix MW followed by a ten-digit number",
                            "location": "query"
                        },
                        "amgpopid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a popular music album, consisting of a ten-character string that starts with R and is followed by nine digits with leading spaces",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music album, consisting of a ten-character string that starts with W and is followed by nine digits with leading spaces",
                            "location": "query"
                        },
                        "include": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Other Album requests to include in the request. For multiple includes, separate the values with commas like this: include=images,tracks.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Album.Info"
                },
                "ClassicalReview": {
                    "path": "data/v1/album/classicalreview",
                    "httpMethod": "GET",
                    "description": "Returns an editorial review of a classical music album. Please set a value for album, albumid, amgpopid, or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "album": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Keywords from the album title",
                            "location": "query"
                        },
                        "albumid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for an album, consisting of the prefix MW followed by a ten-digit number",
                            "location": "query"
                        },
                        "amgpopid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a popular music album, consisting of a ten-character string that starts with R and is followed by nine digits with leading spaces",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music album, consisting of a ten-character string that starts with W and is followed by nine digits with leading spaces",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Album.ClassicalReview"
                },
                "Credits": {
                    "path": "data/v1/album/credits",
                    "httpMethod": "GET",
                    "description": "Returns the production credits for an album, a list of the names and roles of the people and groups that produced the album. Please set a value for album, albumid, amgpopid, or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "album": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Keywords from the album title",
                            "location": "query"
                        },
                        "albumid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for an album, consisting of the prefix MW followed by a ten-digit number",
                            "location": "query"
                        },
                        "amgpopid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a popular music album, consisting of a ten-character string that starts with R and is followed by nine digits with leading spaces",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music album, consisting of a ten-character string that starts with W and is followed by nine digits with leading spaces",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Album.Credits"
                },
                "Images": {
                    "path": "data/v1/album/images",
                    "httpMethod": "GET",
                    "description": "Returns URLs to pictures of an album along with associated image information. Note: Access to images is governed by your subscription level and geographical location. Photography credits must be displayed with images. Please set a value for album, albumid, amgpopid, or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "album": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Keywords from the album title",
                            "location": "query"
                        },
                        "albumid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for an album, consisting of the prefix MW followed by a ten-digit number",
                            "location": "query"
                        },
                        "amgpopid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a popular music album, consisting of a ten-character string that starts with R and is followed by nine digits with leading spaces",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music album, consisting of a ten-character string that starts with W and is followed by nine digits with leading spaces",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Album.Images"
                },
                "Moods": {
                    "path": "data/v1/album/moods",
                    "httpMethod": "GET",
                    "description": "Returns a list of terms that describe expressive characteristics of the music, along with weightings that reflect the relative strength of each term. Please set a value for album, albumid, amgpopid, or amgclassicalid. Fields in bold are required. Fields in bold are required.",
                    "parameters": {
                        "album": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Keywords from the album title",
                            "location": "query"
                        },
                        "albumid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for an album, consisting of the prefix MW followed by a ten-digit number",
                            "location": "query"
                        },
                        "amgpopid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a popular music album, consisting of a ten-character string that starts with R and is followed by nine digits with leading spaces",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music album, consisting of a ten-character string that starts with W and is followed by nine digits with leading spaces",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Album.Moods"
                },
                "PrimaryReview": {
                    "path": "data/v1/album/primaryreview",
                    "httpMethod": "GET",
                    "description": "Returns the most recent major review of an album. Please set a value for album, albumid, amgpopid, or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "album": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Keywords from the album title",
                            "location": "query"
                        },
                        "albumid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for an album, consisting of the prefix MW followed by a ten-digit number",
                            "location": "query"
                        },
                        "amgpopid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a popular music album, consisting of a ten-character string that starts with R and is followed by nine digits with leading spaces",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music album, consisting of a ten-character string that starts with W and is followed by nine digits with leading spaces",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Album.PrimaryReview"
                },
                "Releases": {
                    "path": "data/v1/album/releases",
                    "httpMethod": "GET",
                    "description": "Returns information about the releases of an album, including media type and whether it can be purchased. Please set a value for album, albumid, amgpopid, or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "album": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Keywords from the album title",
                            "location": "query"
                        },
                        "albumid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for an album, consisting of the prefix MW followed by a ten-digit number",
                            "location": "query"
                        },
                        "amgpopid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a popular music album, consisting of a ten-character string that starts with R and is followed by nine digits with leading spaces",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music album, consisting of a ten-character string that starts with W and is followed by nine digits with leading spaces",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Album.Releases"
                },
                "Styles": {
                    "path": "data/v1/album/styles",
                    "httpMethod": "GET",
                    "description": "Returns a list of musical styles that apply to the music on an album along with weightings that reflect the importance of each style in the music. Please set a value for album, albumid, amgpopid, or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "album": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Keywords from the album title",
                            "location": "query"
                        },
                        "albumid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for an album, consisting of the prefix MW followed by a ten-digit number",
                            "location": "query"
                        },
                        "amgpopid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a popular music album, consisting of a ten-character string that starts with R and is followed by nine digits with leading spaces",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music album, consisting of a ten-character string that starts with W and is followed by nine digits with leading spaces",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Album.Styles"
                },
                "Themes": {
                    "path": "data/v1/album/themes",
                    "httpMethod": "GET",
                    "description": "Returns a list of topics, feelings, and circumstances that motivate or fit with the music on an album. Please set a value for album, albumid, amgpopid, or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "album": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Keywords from the album title",
                            "location": "query"
                        },
                        "albumid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for an album, consisting of the prefix MW followed by a ten-digit number",
                            "location": "query"
                        },
                        "amgpopid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a popular music album, consisting of a ten-character string that starts with R and is followed by nine digits with leading spaces",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music album, consisting of a ten-character string that starts with W and is followed by nine digits with leading spaces",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Album.Themes"
                },
                "Tracks": {
                    "path": "data/v1/album/tracks",
                    "httpMethod": "GET",
                    "description": "Returns information about the songs on a popular music album and the performances on a classical music album. Popular music songs are identified by track IDs; classical music performances are identified by performance IDs. Please set a value for album, albumid, amgpopid, or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "album": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Keywords from the album title",
                            "location": "query"
                        },
                        "albumid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for an album, consisting of the prefix MW followed by a ten-digit number",
                            "location": "query"
                        },
                        "amgpopid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a popular music album, consisting of a ten-character string that starts with R and is followed by nine digits with leading spaces",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music album, consisting of a ten-character string that starts with W and is followed by nine digits with leading spaces",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Album.Tracks"
                }
            }
        },
        "Composition": {
            "methods": {
                "Info": {
                    "path": "data/v1/composition/info",
                    "httpMethod": "GET",
                    "description": "Returns basic information about a classical music composition. Please set a value for compositionid or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "compositionid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for a classical music composition, consisting of the prefix MC followed by a ten-digit number. For example: MC0002369165.",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music composition, consisting of a ten-character string that starts with C and is followed by nine digits with leading spaces. For example: C    43235.",
                            "location": "query"
                        },
                        "include": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Other requests to include in the request. For multiple includes, separate the values with commas like this: include=parts,description.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Composition.Info"
                },
                "Description": {
                    "path": "data/v1/composition/description",
                    "httpMethod": "GET",
                    "description": "Returns a description of a classical music composition. Please set a value for compositionid or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "compositionid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for a classical music composition, consisting of the prefix MC followed by a ten-digit number. For example: MC0002369165.",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music composition, consisting of a ten-character string that starts with C and is followed by nine digits with leading spaces. For example: C    43235.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Composition.Description"
                },
                "Parts": {
                    "path": "data/v1/composition/parts",
                    "httpMethod": "GET",
                    "description": "Returns the names of the parts or movements of a classical music composition, each of which is recorded as a single track. Please set a value for compositionid or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "compositionid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for a classical music composition, consisting of the prefix MC followed by a ten-digit number. For example: MC0002369165.",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music composition, consisting of a ten-character string that starts with C and is followed by nine digits with leading spaces. For example: C    43235.",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Composition.Parts"
                },
                "Releases": {
                    "path": "data/v1/composition/releases",
                    "httpMethod": "GET",
                    "description": "Returns a list of album releases that feature a performance of a composition. Please set a value for compositionid or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "compositionid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for a classical music composition, consisting of the prefix MC followed by a ten-digit number. For example: MC0002369165.",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music composition, consisting of a ten-character string that starts with C and is followed by nine digits with leading spaces. For example: C    43235.",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Composition.Releases"
                }
            }
        },
        "Performance": {
            "methods": {
                "Info": {
                    "path": "data/v1/performance/info",
                    "httpMethod": "GET",
                    "description": "Returns basic information about a classical music performance. Please set a value for performanceid or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "performanceid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for a classical music performance, consisting of the prefix MQ followed by a ten-digit number. For example, MQ0001169372.",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music composition, consisting of a ten-character string that starts with C and is followed by nine digits with leading spaces. For example: C    43235.",
                            "location": "query"
                        },
                        "include": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Other Performance requests to include in the request. For multiple includes, separate the values with commas like this: include=credits,release.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Performance.Info"
                },
                "Composition": {
                    "path": "data/v1/performance/composition",
                    "httpMethod": "GET",
                    "description": "Returns information about a composition played in a classical music performance. Please set a value for performanceid or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "performanceid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for a classical music performance, consisting of the prefix MQ followed by a ten-digit number. For example, MQ0001169372.",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music composition, consisting of a ten-character string that starts with C and is followed by nine digits with leading spaces. For example: C    43235.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Performance.Composition"
                },
                "Credits": {
                    "path": "data/v1/performance/credits",
                    "httpMethod": "GET",
                    "description": "Returns the names and roles of the people, groups, and organizations that contributed to a classical music performance and the album release. Please set a value for performanceid or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "performanceid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for a classical music performance, consisting of the prefix MQ followed by a ten-digit number. For example, MQ0001169372.",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music composition, consisting of a ten-character string that starts with C and is followed by nine digits with leading spaces. For example: C    43235.",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Performance.Credits"
                },
                "Images": {
                    "path": "data/v1/performance/images",
                    "httpMethod": "GET",
                    "description": "Returns URLs to images of an album that contains the recording a classical music performance, along with associated image information. Note: Access to images is governed by your subscription level and geographical location. Photography credits must be displayed with images. Please set a value for performanceid or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "performanceid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for a classical music performance, consisting of the prefix MQ followed by a ten-digit number. For example, MQ0001169372.",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music composition, consisting of a ten-character string that starts with C and is followed by nine digits with leading spaces. For example: C    43235.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Performance.Images"
                },
                "Release": {
                    "path": "data/v1/performance/release",
                    "httpMethod": "GET",
                    "description": "Returns information about an album release that contains the recording of a classical music performance. Please set a value for performanceid or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "performanceid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for a classical music performance, consisting of the prefix MQ followed by a ten-digit number. For example, MQ0001169372.",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music composition, consisting of a ten-character string that starts with C and is followed by nine digits with leading spaces. For example: C    43235.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Performance.Release"
                }
            }
        },
        "Release": {
            "methods": {
                "Info": {
                    "path": "data/v1/release/info",
                    "httpMethod": "GET",
                    "description": "Returns basic information about an LP, CD, DVD, cassette, download, or other release of an album. Please set a value for eanid, upcid, releaseid, amgpopid, or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "eanid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "EAN code of the release",
                            "location": "query"
                        },
                        "upcid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Universal Product Code for an item",
                            "location": "query"
                        },
                        "releaseid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for the release, consisting of the prefix MR followed by a ten-digit number.",
                            "location": "query"
                        },
                        "amgpopid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a popular music album, consisting of a ten-character string that starts with R and is followed by nine digits with leading spaces. For example: R  1805889",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music album, consisting of a ten-character string that starts with W and is followed by nine digits with leading spaces. For example: W   180317",
                            "location": "query"
                        },
                        "include": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Other Release requests to include in the request. For multiple includes, separate the values with commas like this: include=credits,tracks.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Release.Info"
                },
                "ClassicalReview": {
                    "path": "data/v1/release/classicalreview",
                    "httpMethod": "GET",
                    "description": "Returns an editorial review of a classical music album. Please set a value for eanid, upcid, releaseid, amgpopid, or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "eanid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "EAN code of the release",
                            "location": "query"
                        },
                        "upcid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Universal Product Code for an item",
                            "location": "query"
                        },
                        "releaseid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for the release, consisting of the prefix MR followed by a ten-digit number.",
                            "location": "query"
                        },
                        "amgpopid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a popular music album, consisting of a ten-character string that starts with R and is followed by nine digits with leading spaces. For example: R  1805889",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music album, consisting of a ten-character string that starts with W and is followed by nine digits with leading spaces. For example: W   180317",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Release.ClassicalReview"
                },
                "Credits": {
                    "path": "data/v1/release/credits",
                    "httpMethod": "GET",
                    "description": "Returns the names and roles of the people, groups, and organizations that contributed to a release. Please set a value for eanid, upcid, releaseid, amgpopid, or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "eanid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "EAN code of the release",
                            "location": "query"
                        },
                        "upcid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Universal Product Code for an item",
                            "location": "query"
                        },
                        "releaseid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for the release, consisting of the prefix MR followed by a ten-digit number.",
                            "location": "query"
                        },
                        "amgpopid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a popular music album, consisting of a ten-character string that starts with R and is followed by nine digits with leading spaces. For example: R  1805889",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music album, consisting of a ten-character string that starts with W and is followed by nine digits with leading spaces. For example: W   180317",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Release.Credits"
                },
                "Images": {
                    "path": "data/v1/release/images",
                    "httpMethod": "GET",
                    "description": "Returns URLs to pictures of the album release along with associated image information. Note: Access to images is governed by your subscription level and geographical location. Photography credits must be displayed with images. Please set a value for eanid, upcid, releaseid, amgpopid, or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "eanid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "EAN code of the release",
                            "location": "query"
                        },
                        "upcid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Universal Product Code for an item",
                            "location": "query"
                        },
                        "releaseid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for the release, consisting of the prefix MR followed by a ten-digit number.",
                            "location": "query"
                        },
                        "amgpopid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a popular music album, consisting of a ten-character string that starts with R and is followed by nine digits with leading spaces. For example: R  1805889",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music album, consisting of a ten-character string that starts with W and is followed by nine digits with leading spaces. For example: W   180317",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Release.Images"
                },
                "Moods": {
                    "path": "data/v1/release/moods",
                    "httpMethod": "GET",
                    "description": "Returns a list of terms that describe expressive characteristics of the music, along with weightings that reflect the relative strength of each term. Please set a value for eanid, upcid, releaseid, amgpopid, or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "eanid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "EAN code of the release",
                            "location": "query"
                        },
                        "upcid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Universal Product Code for an item",
                            "location": "query"
                        },
                        "releaseid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for the release, consisting of the prefix MR followed by a ten-digit number.",
                            "location": "query"
                        },
                        "amgpopid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a popular music album, consisting of a ten-character string that starts with R and is followed by nine digits with leading spaces. For example: R  1805889",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music album, consisting of a ten-character string that starts with W and is followed by nine digits with leading spaces. For example: W   180317",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Release.Moods"
                },
                "Performances": {
                    "path": "data/v1/release/performances",
                    "httpMethod": "GET",
                    "description": "Returns information about the performances on a release of a classical music album. Please set a value for eanid, upcid, releaseid, amgpopid, or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "eanid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "EAN code of the release",
                            "location": "query"
                        },
                        "upcid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Universal Product Code for an item",
                            "location": "query"
                        },
                        "releaseid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for the release, consisting of the prefix MR followed by a ten-digit number.",
                            "location": "query"
                        },
                        "amgpopid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a popular music album, consisting of a ten-character string that starts with R and is followed by nine digits with leading spaces. For example: R  1805889",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music album, consisting of a ten-character string that starts with W and is followed by nine digits with leading spaces. For example: W   180317",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Release.Performances"
                },
                "PrimaryReview": {
                    "path": "data/v1/release/primaryreview",
                    "httpMethod": "GET",
                    "description": "Returns the most recent major review of a release of an album. Please set a value for eanid, upcid, releaseid, amgpopid, or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "eanid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "EAN code of the release",
                            "location": "query"
                        },
                        "upcid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Universal Product Code for an item",
                            "location": "query"
                        },
                        "releaseid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for the release, consisting of the prefix MR followed by a ten-digit number.",
                            "location": "query"
                        },
                        "amgpopid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a popular music album, consisting of a ten-character string that starts with R and is followed by nine digits with leading spaces. For example: R  1805889",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music album, consisting of a ten-character string that starts with W and is followed by nine digits with leading spaces. For example: W   180317",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Release.PrimaryReview"
                },
                "Styles": {
                    "path": "data/v1/release/styles",
                    "httpMethod": "GET",
                    "description": "Returns a list of musical styles relevant to the music on an album release along with weightings that reflect the importance of each style in the music. Please set a value for eanid, upcid, releaseid, amgpopid, or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "eanid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "EAN code of the release",
                            "location": "query"
                        },
                        "upcid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Universal Product Code for an item",
                            "location": "query"
                        },
                        "releaseid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for the release, consisting of the prefix MR followed by a ten-digit number.",
                            "location": "query"
                        },
                        "amgpopid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a popular music album, consisting of a ten-character string that starts with R and is followed by nine digits with leading spaces. For example: R  1805889",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music album, consisting of a ten-character string that starts with W and is followed by nine digits with leading spaces. For example: W   180317",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Release.Styles"
                },
                "Themes": {
                    "path": "data/v1/release/themes",
                    "httpMethod": "GET",
                    "description": "Returns a list of topics, feelings, and circumstances that motivate or fit with the music on an album release, along with weightings that reflect the relative importance of each. Please set a value for eanid, upcid, releaseid, amgpopid, or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "eanid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "EAN code of the release",
                            "location": "query"
                        },
                        "upcid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Universal Product Code for an item",
                            "location": "query"
                        },
                        "releaseid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for the release, consisting of the prefix MR followed by a ten-digit number.",
                            "location": "query"
                        },
                        "amgpopid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a popular music album, consisting of a ten-character string that starts with R and is followed by nine digits with leading spaces. For example: R  1805889",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music album, consisting of a ten-character string that starts with W and is followed by nine digits with leading spaces. For example: W   180317",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Release.Themes"
                },
                "Tracks": {
                    "path": "data/v1/release/tracks",
                    "httpMethod": "GET",
                    "description": "Returns information about the tracks on a release of an album. Please set a value for eanid, upcid, releaseid, amgpopid, or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "eanid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "EAN code of the release",
                            "location": "query"
                        },
                        "upcid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Universal Product Code for an item",
                            "location": "query"
                        },
                        "releaseid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for the release, consisting of the prefix MR followed by a ten-digit number.",
                            "location": "query"
                        },
                        "amgpopid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a popular music album, consisting of a ten-character string that starts with R and is followed by nine digits with leading spaces. For example: R  1805889",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music album, consisting of a ten-character string that starts with W and is followed by nine digits with leading spaces. For example: W   180317",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Release.Tracks"
                }
            }
        },
        "Song": {
            "methods": {
                "Info": {
                    "path": "data/v1/song/info",
                    "httpMethod": "GET",
                    "description": "Returns basic information about a song. Please set a value for track, trackid, isrcid, muzeid, amgpoptrackid, or amgclassicaltrackid. Fields in bold are required.",
                    "parameters": {
                        "track": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Title of the song",
                            "location": "query"
                        },
                        "trackid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for a popular song, consisting of the prefix MT followed by a ten-digit number. For example: MT0009472348.",
                            "location": "query"
                        },
                        "isrcid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "International Standard Recording Code (ISRC) for a song recording.",
                            "location": "query"
                        },
                        "muzeid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Legacy ID from the Muze database.",
                            "location": "query"
                        },
                        "amgpoptrackid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a track on a popular music album, consisting of a ten-character string that starts with T and is followed by 9 digits with leading spaces.",
                            "location": "query"
                        },
                        "amgclassicaltrackid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a track on a classical music album, consisting of a ten-character string that starts with Y and is followed by 9 digits with leading spaces.",
                            "location": "query"
                        },
                        "include": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Other Song requests to include in the request. For multiple includes, separate the values with commas like this: include=appearances,review.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Song.Info"
                },
                "Appearances": {
                    "path": "data/v1/song/appearances",
                    "httpMethod": "GET",
                    "description": "Returns a list of albums and videos a song track appears on. Please set a value for track, trackid, isrcid, muzeid, amgpoptrackid, or amgclassicaltrackid. Fields in bold are required.",
                    "parameters": {
                        "track": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Title of the song",
                            "location": "query"
                        },
                        "trackid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for a popular song, consisting of the prefix MT followed by a ten-digit number. For example: MT0009472348.",
                            "location": "query"
                        },
                        "isrcid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "International Standard Recording Code (ISRC) for a song recording.",
                            "location": "query"
                        },
                        "muzeid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Legacy ID from the Muze database.",
                            "location": "query"
                        },
                        "amgpoptrackid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a track on a popular music album, consisting of a ten-character string that starts with T and is followed by 9 digits with leading spaces.",
                            "location": "query"
                        },
                        "amgclassicaltrackid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a track on a classical music album, consisting of a ten-character string that starts with Y and is followed by 9 digits with leading spaces.",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Song.Appearances"
                },
                "Review": {
                    "path": "data/v1/song/review",
                    "httpMethod": "GET",
                    "description": "Returns the most recent major review of a song. Please set a value for track, trackid, isrcid, muzeid, amgpoptrackid, or amgclassicaltrackid. Fields in bold are required.",
                    "parameters": {
                        "track": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Title of the song",
                            "location": "query"
                        },
                        "trackid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for a popular song, consisting of the prefix MT followed by a ten-digit number. For example: MT0009472348.",
                            "location": "query"
                        },
                        "isrcid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "International Standard Recording Code (ISRC) for a song recording.",
                            "location": "query"
                        },
                        "muzeid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Legacy ID from the Muze database.",
                            "location": "query"
                        },
                        "amgpoptrackid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a track on a popular music album, consisting of a ten-character string that starts with T and is followed by 9 digits with leading spaces.",
                            "location": "query"
                        },
                        "amgclassicaltrackid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a track on a classical music album, consisting of a ten-character string that starts with Y and is followed by 9 digits with leading spaces.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Song.Review"
                }
            }
        },
        "Descriptor": {
            "methods": {
                "MovieGenres": {
                    "path": "data/v1/descriptor/moviegenres",
                    "httpMethod": "GET",
                    "description": "Returns the movie genres and subgenres recognized by Rovi DVDs. Fields in bold are required.",
                    "parameters": {
                        "include": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Currently, the only valid parameter is \"subgenres\"",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Descriptor.MovieGenres"
                },
                "MusicGenres": {
                    "path": "data/v1/descriptor/musicgenres",
                    "httpMethod": "GET",
                    "description": "Returns the music genres, subgenres, and styles recognized by Rovi Music. Fields in bold are required.",
                    "parameters": {
                        "include": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Additional information you want to be included about each genre. Valid values: all or subgenres.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Descriptor.MusicGenres"
                },
                "MusicStyles": {
                    "path": "data/v1/descriptor/styles",
                    "httpMethod": "GET",
                    "description": "Returns descriptions of music styles recognized by Rovi Cloud Services. Fields in bold are required.",
                    "parameters": {
                        "styleids": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "A specific style ID you want the description for",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Descriptor.MusicStyles"
                },
                "Genres": {
                    "path": "data/v1/descriptor/genres",
                    "httpMethod": "GET",
                    "description": "Returns descriptions of genres used in Rovi Cloud Services, plus optional lists of subgenres and musical styles. Fields in bold are required.",
                    "parameters": {
                        "genreids": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Specific genre IDs you want information about.",
                            "location": "query"
                        },
                        "include": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Additional information you want to be included about each genre. Valid values: all or subgenres.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Descriptor.Genres"
                },
                "Subgenres": {
                    "path": "data/v1/descriptor/subgenres",
                    "httpMethod": "GET",
                    "description": "Returns descriptions of the subgenres recognized by Rovi Music and Rovi DVDs, plus lists of music styles of music subgenres. Fields in bold are required.",
                    "parameters": {
                        "subgenreids": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Specific subgenre IDs you want information about",
                            "location": "query"
                        },
                        "include": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Additional information you want to be included about each genre. Valid values: all or subgenres.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Descriptor.Subgenres"
                },
                "SignificantMovies": {
                    "path": "data/v1/descriptor/significantmovies",
                    "httpMethod": "GET",
                    "description": "Returns the top movies and TV shows in a movie genre or subgenre. Fields in bold are required.",
                    "parameters": {
                        "genreids": {
                            "type": "string",
                            "required": true,
                            "default": "",
                            "description": "Genre ID or subgenre ID",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Descriptor.SignificantMovies"
                },
                "SignificantSongs": {
                    "path": "data/v1/descriptor/significantsongs",
                    "httpMethod": "GET",
                    "description": "Returns the top songs in a musical genre or subgenre. Fields in bold are required.",
                    "parameters": {
                        "genreids": {
                            "type": "string",
                            "required": true,
                            "default": "",
                            "description": "Genre ID or subgenre ID",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Descriptor.SignificantSongs"
                },
                "SignificantArtists": {
                    "path": "data/v1/descriptor/significantartists",
                    "httpMethod": "GET",
                    "description": "Returns the top artists in a musical genre or subgenre. Fields in bold are required.",
                    "parameters": {
                        "genreids": {
                            "type": "string",
                            "required": true,
                            "default": "",
                            "description": "Genre ID or subgenre ID",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Descriptor.SignificantArtists"
                },
                "SignificantAlbums": {
                    "path": "data/v1/descriptor/significantalbums",
                    "httpMethod": "GET",
                    "description": "Returns the top albums in a musical genre or subgenre. Fields in bold are required.",
                    "parameters": {
                        "genreids": {
                            "type": "string",
                            "required": true,
                            "default": "",
                            "description": "Genre ID or subgenre ID",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Descriptor.SignificantAlbums"
                },
                "SignificantComposers": {
                    "path": "data/v1/descriptor/significantcomposers",
                    "httpMethod": "GET",
                    "description": "Returns the top composers in a classical music subgenre. Fields in bold are required.",
                    "parameters": {
                        "genreids": {
                            "type": "string",
                            "required": true,
                            "default": "",
                            "description": "Genre ID or subgenre ID",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Descriptor.SignificantComposers"
                },
                "SignificantCompositions": {
                    "path": "data/v1/descriptor/significantcompositions",
                    "httpMethod": "GET",
                    "description": "Returns the top compositions in the classical music genre and subgenres. Fields in bold are required.",
                    "parameters": {
                        "genreids": {
                            "type": "string",
                            "required": true,
                            "default": "",
                            "description": "Genre ID or subgenre ID",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Descriptor.SignificantCompositions"
                }
            }
        },
        "Name": {
            "methods": {
                "Info": {
                    "path": "data/v1/name/info",
                    "httpMethod": "GET",
                    "description": "Returns basic information about a person, group, or organization. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "name": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Name of the person or group",
                            "location": "query"
                        },
                        "amgmovieid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces",
                            "location": "query"
                        },
                        "amgpopid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a popular music artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces",
                            "location": "query"
                        },
                        "cosmoid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Cosmo database ID for a person, group, or organization",
                            "location": "query"
                        },
                        "nameid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for a person, group, or organization, consisting of the prefix MN followed by a ten-digit number",
                            "location": "query"
                        },
                        "include": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Any content to include from other Name API requests. For multiple include values, separate the values with commas like this: include=songs,musiccredits.",
                            "location": "query"
                        },
                        "type": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "If you request All or Discography in the include parameter, type specifies what types of discography to return. For multiple include values, separate the values with commas. Valid values: main, video, singles, compilations, others.",
                            "location": "query"
                        },
                        "serviceid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Database ID of a television service for an area. Must specify an include of All or Schedule",
                            "location": "query"
                        },
                        "duration": {
                            "type": "integer",
                            "required": false,
                            "default": 10080,
                            "description": "If you specify a serviceid for a schedule of broadcasts the person appears in, duration determines the number of minutes the schedule will cover",
                            "location": "query"
                        },
                        "inprogress": {
                            "type": "boolean",
                            "required": false,
                            "default": false,
                            "description": "If you specify serviceid for a schedule of broadcasts the person appears in, inprogress determines whether shows that are in progress at starttime are included in the schedule",
                            "enum": [
                                "true",
                                "false"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "true",
                                "false"
                            ]
                        },
                        "sourceid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "If you specify serviceid for a schedule of broadcasts the person appears in, sourceid determines which channels will appear on the schedule",
                            "location": "query"
                        },
                        "sourceinclude": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "If you specify sourceid to select the television sources to be returned, sourceinclude specifies an attribute of the channels in the source ID list that you want to include in the list of channels returned",
                            "enum": [
                                "",
                                "HD",
                                "PPV",
                                "Music"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "",
                                "HD",
                                "PPV",
                                "Music"
                            ]
                        },
                        "sourceexclude": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "If you specify sourceid to select the television sources to be returned, sourceexclude specifies attributes of the channels in the source ID list that you want to eliminate from the channels returned",
                            "enum": [
                                "",
                                "HD",
                                "PPV",
                                "Music"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "",
                                "HD",
                                "PPV",
                                "Music"
                            ]
                        },
                        "starttime": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "If you specify serviceid for a schedule of broadcasts the person appears in, starttime determines the starting time of the schedule",
                            "location": "query"
                        },
                        "formatid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "If you specify All or Images in the include parameter, formatid specifies the size and file format of returned images",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Name.Info"
                },
                "Aliases": {
                    "path": "data/v1/name/aliases",
                    "httpMethod": "GET",
                    "description": "Returns other names a person or group has been known by. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "name": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Name of the person or group",
                            "location": "query"
                        },
                        "amgmovieid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces",
                            "location": "query"
                        },
                        "amgpopid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a popular music artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces",
                            "location": "query"
                        },
                        "cosmoid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Cosmo database ID for a person, group, or organization",
                            "location": "query"
                        },
                        "nameid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for a person, group, or organization, consisting of the prefix MN followed by a ten-digit number",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Name.Aliases"
                },
                "AssociatedWith": {
                    "path": "data/v1/name/associatedwith",
                    "httpMethod": "GET",
                    "description": "Returns names of people and groups who participated in the work of a person or group. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "name": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Name of the person or group",
                            "location": "query"
                        },
                        "amgmovieid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces",
                            "location": "query"
                        },
                        "amgpopid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a popular music artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces",
                            "location": "query"
                        },
                        "cosmoid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Cosmo database ID for a person, group, or organization",
                            "location": "query"
                        },
                        "nameid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for a person, group, or organization, consisting of the prefix MN followed by a ten-digit number",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Name.AssociatedWith"
                },
                "ClassicalBio": {
                    "path": "data/v1/name/classicalbio",
                    "httpMethod": "GET",
                    "description": "Returns names of people and groups who participated in the work of a person or group. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "name": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Name of the person or group",
                            "location": "query"
                        },
                        "amgmovieid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces",
                            "location": "query"
                        },
                        "amgpopid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a popular music artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces",
                            "location": "query"
                        },
                        "cosmoid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Cosmo database ID for a person, group, or organization",
                            "location": "query"
                        },
                        "nameid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for a person, group, or organization, consisting of the prefix MN followed by a ten-digit number",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Name.ClassicalBio"
                },
                "CollaboratorWith": {
                    "path": "data/v1/name/collaboratorwith",
                    "httpMethod": "GET",
                    "description": "Returns names of people and groups who collaborated with a person or group. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "name": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Name of the person or group",
                            "location": "query"
                        },
                        "amgmovieid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces",
                            "location": "query"
                        },
                        "amgpopid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a popular music artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces",
                            "location": "query"
                        },
                        "cosmoid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Cosmo database ID for a person, group, or organization",
                            "location": "query"
                        },
                        "nameid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for a person, group, or organization, consisting of the prefix MN followed by a ten-digit number",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Name.CollaboratorWith"
                },
                "Compositions": {
                    "path": "data/v1/name/compositions",
                    "httpMethod": "GET",
                    "description": "Returns a list of classical compositions by a person or group. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "name": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Name of the person or group",
                            "location": "query"
                        },
                        "amgmovieid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces",
                            "location": "query"
                        },
                        "amgpopid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a popular music artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces",
                            "location": "query"
                        },
                        "cosmoid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Cosmo database ID for a person, group, or organization",
                            "location": "query"
                        },
                        "nameid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for a person, group, or organization, consisting of the prefix MN followed by a ten-digit number",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Name.Compositions"
                },
                "Contemporaries": {
                    "path": "data/v1/name/contemporaries",
                    "httpMethod": "GET",
                    "description": "Returns names of people doing comparable work and living during the same time as a person or group. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "name": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Name of the person or group",
                            "location": "query"
                        },
                        "amgmovieid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces",
                            "location": "query"
                        },
                        "amgpopid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a popular music artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces",
                            "location": "query"
                        },
                        "cosmoid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Cosmo database ID for a person, group, or organization",
                            "location": "query"
                        },
                        "nameid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for a person, group, or organization, consisting of the prefix MN followed by a ten-digit number",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Name.Contemporaries"
                },
                "Discography": {
                    "path": "data/v1/name/discography",
                    "httpMethod": "GET",
                    "description": "Returns a list of albums that a person, group, or organization contributed to. The response can by filtered by type of album. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "name": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Name of the person or group",
                            "location": "query"
                        },
                        "amgmovieid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces",
                            "location": "query"
                        },
                        "amgpopid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a popular music artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces",
                            "location": "query"
                        },
                        "cosmoid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Cosmo database ID for a person, group, or organization",
                            "location": "query"
                        },
                        "nameid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for a person, group, or organization, consisting of the prefix MN followed by a ten-digit number",
                            "location": "query"
                        },
                        "type": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Specifies what types of discography to return. Separate the values with commas like this: type=video,singles.",
                            "enum": [
                                "",
                                "main",
                                "video",
                                "singles",
                                "compilations",
                                "others"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "",
                                "main",
                                "video",
                                "singles",
                                "compilations",
                                "others"
                            ]
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Name.Discography"
                },
                "Filmography": {
                    "path": "data/v1/name/filmography",
                    "httpMethod": "GET",
                    "description": "Returns information about the films a person or group contributed to. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "name": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Name of the person or group",
                            "location": "query"
                        },
                        "amgmovieid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces",
                            "location": "query"
                        },
                        "amgpopid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a popular music artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces",
                            "location": "query"
                        },
                        "cosmoid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Cosmo database ID for a person, group, or organization",
                            "location": "query"
                        },
                        "nameid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for a person, group, or organization, consisting of the prefix MN followed by a ten-digit number",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Name.Filmography"
                },
                "Followers": {
                    "path": "data/v1/name/followers",
                    "httpMethod": "GET",
                    "description": "Returns a list of people who followed a person or group and were influenced by them. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "name": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Name of the person or group",
                            "location": "query"
                        },
                        "amgmovieid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces",
                            "location": "query"
                        },
                        "amgpopid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a popular music artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces",
                            "location": "query"
                        },
                        "cosmoid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Cosmo database ID for a person, group, or organization",
                            "location": "query"
                        },
                        "nameid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for a person, group, or organization, consisting of the prefix MN followed by a ten-digit number",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Name.Followers"
                },
                "GroupMembers": {
                    "path": "data/v1/name/groupmembers",
                    "httpMethod": "GET",
                    "description": "Returns the names of members of a group. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "name": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Name of the person or group",
                            "location": "query"
                        },
                        "amgmovieid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces",
                            "location": "query"
                        },
                        "amgpopid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a popular music artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces",
                            "location": "query"
                        },
                        "cosmoid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Cosmo database ID for a person, group, or organization",
                            "location": "query"
                        },
                        "nameid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for a person, group, or organization, consisting of the prefix MN followed by a ten-digit number",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Name.GroupMembers"
                },
                "Images": {
                    "path": "data/v1/name/images",
                    "httpMethod": "GET",
                    "description": "Returns URLs to images of a person or group. Note: Access to images is governed by your subscription level and geographical location. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "name": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Name of the person or group",
                            "location": "query"
                        },
                        "amgmovieid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces",
                            "location": "query"
                        },
                        "amgpopid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a popular music artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces",
                            "location": "query"
                        },
                        "cosmoid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Cosmo database ID for a person, group, or organization",
                            "location": "query"
                        },
                        "nameid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for a person, group, or organization, consisting of the prefix MN followed by a ten-digit number",
                            "location": "query"
                        },
                        "formatid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Size and file format of returned images, as specified by format ID",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Name.Images"
                },
                "Influencers": {
                    "path": "data/v1/name/influencers",
                    "httpMethod": "GET",
                    "description": "Returns a list of those who influenced a person or group. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "name": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Name of the person or group",
                            "location": "query"
                        },
                        "amgmovieid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces",
                            "location": "query"
                        },
                        "amgpopid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a popular music artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces",
                            "location": "query"
                        },
                        "cosmoid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Cosmo database ID for a person, group, or organization",
                            "location": "query"
                        },
                        "nameid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for a person, group, or organization, consisting of the prefix MN followed by a ten-digit number",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Name.Influencers"
                },
                "MemberOf": {
                    "path": "data/v1/name/memberof",
                    "httpMethod": "GET",
                    "description": "Returns names of groups that a person has been a member of. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "name": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Name of the person or group",
                            "location": "query"
                        },
                        "amgmovieid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces",
                            "location": "query"
                        },
                        "amgpopid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a popular music artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces",
                            "location": "query"
                        },
                        "cosmoid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Cosmo database ID for a person, group, or organization",
                            "location": "query"
                        },
                        "nameid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for a person, group, or organization, consisting of the prefix MN followed by a ten-digit number",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Name.MemberOf"
                },
                "Moods": {
                    "path": "data/v1/name/moods",
                    "httpMethod": "GET",
                    "description": "Returns a list of terms that describe expressive characteristics of the work of a person or group, along with weightings that reflect the relative strength of each term. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "name": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Name of the person or group",
                            "location": "query"
                        },
                        "amgmovieid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces",
                            "location": "query"
                        },
                        "amgpopid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a popular music artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces",
                            "location": "query"
                        },
                        "cosmoid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Cosmo database ID for a person, group, or organization",
                            "location": "query"
                        },
                        "nameid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for a person, group, or organization, consisting of the prefix MN followed by a ten-digit number",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Name.Moods"
                },
                "MovieBio": {
                    "path": "data/v1/name/moviebio",
                    "httpMethod": "GET",
                    "description": "Returns a biography of a person or group involved in movies. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "name": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Name of the person or group",
                            "location": "query"
                        },
                        "amgmovieid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces",
                            "location": "query"
                        },
                        "amgpopid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a popular music artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces",
                            "location": "query"
                        },
                        "cosmoid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Cosmo database ID for a person, group, or organization",
                            "location": "query"
                        },
                        "nameid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for a person, group, or organization, consisting of the prefix MN followed by a ten-digit number",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Name.MovieBio"
                },
                "MovieStyles": {
                    "path": "data/v1/name/moviestyles",
                    "httpMethod": "GET",
                    "description": "Returns a list of styles relevant to the work of a person or group in movies, along with weightings that reflect the importance of each style. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "name": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Name of the person or group",
                            "location": "query"
                        },
                        "amgmovieid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces",
                            "location": "query"
                        },
                        "amgpopid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a popular music artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces",
                            "location": "query"
                        },
                        "cosmoid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Cosmo database ID for a person, group, or organization",
                            "location": "query"
                        },
                        "nameid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for a person, group, or organization, consisting of the prefix MN followed by a ten-digit number",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Name.MovieStyles"
                },
                "MusicBio": {
                    "path": "data/v1/name/musicbio",
                    "httpMethod": "GET",
                    "description": "Returns a biography of a person or group involved in music. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "name": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Name of the person or group",
                            "location": "query"
                        },
                        "amgmovieid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces",
                            "location": "query"
                        },
                        "amgpopid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a popular music artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces",
                            "location": "query"
                        },
                        "cosmoid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Cosmo database ID for a person, group, or organization",
                            "location": "query"
                        },
                        "nameid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for a person, group, or organization, consisting of the prefix MN followed by a ten-digit number",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Name.MusicBio"
                },
                "MusicCredits": {
                    "path": "data/v1/name/musiccredits",
                    "httpMethod": "GET",
                    "description": "Returns a list of the music production credits of a person or group. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "name": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Name of the person or group",
                            "location": "query"
                        },
                        "amgmovieid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces",
                            "location": "query"
                        },
                        "amgpopid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a popular music artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces",
                            "location": "query"
                        },
                        "cosmoid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Cosmo database ID for a person, group, or organization",
                            "location": "query"
                        },
                        "nameid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for a person, group, or organization, consisting of the prefix MN followed by a ten-digit number",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Name.MusicCredits"
                },
                "MusicStyles": {
                    "path": "data/v1/name/musicstyles",
                    "httpMethod": "GET",
                    "description": "Returns a list of the musical styles of a person or group, along with weightings that reflect the importance of each style. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "name": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Name of the person or group",
                            "location": "query"
                        },
                        "amgmovieid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces",
                            "location": "query"
                        },
                        "amgpopid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a popular music artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces",
                            "location": "query"
                        },
                        "cosmoid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Cosmo database ID for a person, group, or organization",
                            "location": "query"
                        },
                        "nameid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for a person, group, or organization, consisting of the prefix MN followed by a ten-digit number",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Name.MusicStyles"
                },
                "Similars": {
                    "path": "data/v1/name/similars",
                    "httpMethod": "GET",
                    "description": "Returns names of similar people or groups. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "name": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Name of the person or group",
                            "location": "query"
                        },
                        "amgmovieid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces",
                            "location": "query"
                        },
                        "amgpopid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a popular music artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces",
                            "location": "query"
                        },
                        "cosmoid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Cosmo database ID for a person, group, or organization",
                            "location": "query"
                        },
                        "nameid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for a person, group, or organization, consisting of the prefix MN followed by a ten-digit number",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Name.Similars"
                },
                "Songs": {
                    "path": "data/v1/name/songs",
                    "httpMethod": "GET",
                    "description": "Returns information about the songs a person or group contributed to. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "name": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Name of the person or group",
                            "location": "query"
                        },
                        "amgmovieid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces",
                            "location": "query"
                        },
                        "amgpopid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a popular music artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces",
                            "location": "query"
                        },
                        "cosmoid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Cosmo database ID for a person, group, or organization",
                            "location": "query"
                        },
                        "nameid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for a person, group, or organization, consisting of the prefix MN followed by a ten-digit number",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Name.Songs"
                },
                "Themes": {
                    "path": "data/v1/name/themes",
                    "httpMethod": "GET",
                    "description": "Returns a list of topics, feelings, and circumstances that motivate or fit with a person, group, or organization, along with weightings that reflect the relative importance of each. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "name": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Name of the person or group",
                            "location": "query"
                        },
                        "amgmovieid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces",
                            "location": "query"
                        },
                        "amgpopid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a popular music artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces",
                            "location": "query"
                        },
                        "cosmoid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Cosmo database ID for a person, group, or organization",
                            "location": "query"
                        },
                        "nameid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for a person, group, or organization, consisting of the prefix MN followed by a ten-digit number",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Name.Themes"
                },
                "Videos": {
                    "path": "data/v1/name/videos",
                    "httpMethod": "GET",
                    "description": "Returns data for constructing links to music videos and movie trailers that are associated with a person or group. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "name": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Name of the person or group",
                            "location": "query"
                        },
                        "amgmovieid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces",
                            "location": "query"
                        },
                        "amgpopid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a popular music artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces",
                            "location": "query"
                        },
                        "cosmoid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Cosmo database ID for a person, group, or organization",
                            "location": "query"
                        },
                        "nameid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for a person, group, or organization, consisting of the prefix MN followed by a ten-digit number",
                            "location": "query"
                        },
                        "count": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Number of items you want to be returned. The default is zero, which returns all items after the offset.",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the list of items, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Name.Videos"
                },
                "Web": {
                    "path": "data/v1/name/web",
                    "httpMethod": "GET",
                    "description": "Returns internet information resources about a person or group. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
                    "parameters": {
                        "name": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Name of the person or group",
                            "location": "query"
                        },
                        "amgmovieid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces",
                            "location": "query"
                        },
                        "amgpopid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a popular music artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces",
                            "location": "query"
                        },
                        "amgclassicalid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG ID for a classical music artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces",
                            "location": "query"
                        },
                        "cosmoid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Cosmo database ID for a person, group, or organization",
                            "location": "query"
                        },
                        "nameid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for a person, group, or organization, consisting of the prefix MN followed by a ten-digit number",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Name.Web"
                }
            }
        },
        "Search": {
            "methods": {
                "Search": {
                    "path": "search/v2.1/{endpoint}/search",
                    "httpMethod": "GET",
                    "description": "Searches titles or names in Rovi Cloud Services and returns results in order of popularity and similarity to the search query. Fields in bold are required.",
                    "parameters": {
                        "endpoint": {
                            "type": "string",
                            "required": true,
                            "default": "",
                            "description": "Database to search",
                            "enum": [
                                "music",
                                "amgvideo",
                                "video"
                            ],
                            "enumDescriptions": [
                                "music",
                                "amgvideo (movies and TV series on DVD)",
                                "video (TV)"
                            ],
                            "location": "path"
                        },
                        "entitytype": {
                            "type": "string",
                            "required": true,
                            "default": "",
                            "description": "Type of content to search for",
                            "enum": [
                                "album",
                                "song",
                                "artist",
                                "movie",
                                "tvseries",
                                "credit",
                                "movie",
                                "tvseries",
                                "onetimeonly",
                                "credit"
                            ],
                            "enumDescriptions": [
                                "album",
                                "song",
                                "artist (music)",
                                "movie (on DVD)",
                                "tvseries (on DVD)",
                                "credits (on DVD)",
                                "movie (on TV)",
                                "tvseries (on TV)",
                                "onetimeonly (on TV)",
                                "credits (on TV)"
                            ],
                            "location": "query"
                        },
                        "query": {
                            "type": "string",
                            "required": true,
                            "default": "",
                            "description": "The search string",
                            "location": "query"
                        },
                        "clu": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Service ID of a television service that has upcoming movies or TV series you want to match against. For example 63612.",
                            "location": "query"
                        },
                        "start": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "If you specify the clu parameter, start specifies the start of the broadcast time window. For example 20120315140000Z.",
                            "location": "query"
                        },
                        "end": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "If you specify the clu parameter, end specifies the end of the broadcast time window. For example 20120315140000Z.",
                            "location": "query"
                        },
                        "rep": {
                            "type": "integer",
                            "required": false,
                            "default": 1,
                            "description": "If you specify the clu parameter, rep specifies the maximum number of broadcasts to be reported in the availabilities object. For example rep=5 returns up to 5 broadcasts.",
                            "location": "query"
                        },
                        "facet": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Count of items available to be returned.",
                            "enum": [
                                "",
                                "type",
                                "genre"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "",
                                "type",
                                "genre"
                            ]
                        },
                        "filter": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Field content that determines which results are returned. Like a WHERE clause in an SQL statement, this parameter selects only results with fields that meet your criteria. See written docs.",
                            "location": "query"
                        },
                        "include": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Additional data to include in each result returned. For multiple include values, separate the values with commas like this: include=movie:moods,crew.",
                            "location": "query"
                        },
                        "size": {
                            "type": "integer",
                            "required": false,
                            "default": 20,
                            "description": "The number of items you want to be returned",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the returned list, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Search.Search"
                },
                "Single-StageSearch": {
                    "path": "search/v2.1{endpoint}/singlestagesearch",
                    "httpMethod": "GET",
                    "description": "Returns search results for titles or names as a user is typing, sorted in order of popularity and the priorities specified in the request filters. Fields in bold are required.",
                    "parameters": {
                        "endpoint": {
                            "type": "string",
                            "required": true,
                            "default": "",
                            "description": "Database to search",
                            "enum": [
                                "music",
                                "amgvideo",
                                "video"
                            ],
                            "enumDescriptions": [
                                "music",
                                "amgvideo (movies and TV series on DVD)",
                                "video (TV)"
                            ],
                            "location": "path"
                        },
                        "entitytype": {
                            "type": "string",
                            "required": true,
                            "default": "",
                            "description": "Type of content to search for",
                            "enum": [
                                "album",
                                "song",
                                "artist",
                                "movie",
                                "tvseries",
                                "credit",
                                "movie",
                                "tvseries",
                                "onetimeonly",
                                "credit"
                            ],
                            "enumDescriptions": [
                                "album",
                                "song",
                                "artist (music)",
                                "movie (on DVD)",
                                "tvseries (on DVD)",
                                "credits (on DVD)",
                                "movie (on TV)",
                                "tvseries (on TV)",
                                "onetimeonly (on TV)",
                                "credits (on TV)"
                            ],
                            "location": "query"
                        },
                        "query": {
                            "type": "string",
                            "required": true,
                            "default": "",
                            "description": "The search string",
                            "location": "query"
                        },
                        "clu": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Service ID of a television service that has upcoming movies or TV series you want to match against. For example 63612.",
                            "location": "query"
                        },
                        "start": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "If you specify the clu parameter, start specifies the start of the broadcast time window. For example 20120315140000Z.",
                            "location": "query"
                        },
                        "end": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "If you specify the clu parameter, end specifies the end of the broadcast time window. For example 20120315140000Z.",
                            "location": "query"
                        },
                        "rep": {
                            "type": "integer",
                            "required": false,
                            "default": 1,
                            "description": "If you specify the clu parameter, rep specifies the maximum number of broadcasts to be reported in the availabilities object. For example rep=5 returns up to 5 broadcasts.",
                            "location": "query"
                        },
                        "facet": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Count of items available to be returned.",
                            "enum": [
                                "",
                                "type",
                                "genre"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "",
                                "type",
                                "genre"
                            ]
                        },
                        "filter": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Field content that determines which results are returned. Like a WHERE clause in an SQL statement, this parameter selects only results with fields that meet your criteria. See written docs.",
                            "location": "query"
                        },
                        "include": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Additional data to include in each result returned. For multiple include values, separate the values with commas like this: include=movie:moods,crew.",
                            "location": "query"
                        },
                        "size": {
                            "type": "integer",
                            "required": false,
                            "default": 20,
                            "description": "The number of items you want to be returned",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the returned list, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Search.Single-StageSearch"
                },
                "FilterBrowse": {
                    "path": "search/v2.1{endpoint}/filterbrowse",
                    "httpMethod": "GET",
                    "description": "Locates content in Rovi Cloud Services based on field-level criteria and returns results listed in order of relevance. Fields in bold are required.",
                    "parameters": {
                        "endpoint": {
                            "type": "string",
                            "required": true,
                            "default": "",
                            "description": "Database to search",
                            "enum": [
                                "music",
                                "amgvideo",
                                "video"
                            ],
                            "enumDescriptions": [
                                "music",
                                "amgvideo (movies and TV series on DVD)",
                                "video (TV)"
                            ],
                            "location": "path"
                        },
                        "entitytype": {
                            "type": "string",
                            "required": true,
                            "default": "",
                            "description": "Type of content to search for",
                            "enum": [
                                "album",
                                "song",
                                "artist",
                                "movie",
                                "tvseries",
                                "credit",
                                "movie",
                                "tvseries",
                                "onetimeonly",
                                "credit"
                            ],
                            "enumDescriptions": [
                                "album",
                                "song",
                                "artist (music)",
                                "movie (on DVD)",
                                "tvseries (on DVD)",
                                "credits (on DVD)",
                                "movie (on TV)",
                                "tvseries (on TV)",
                                "onetimeonly (on TV)",
                                "credits (on TV)"
                            ],
                            "location": "query"
                        },
                        "facet": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Count of items available to be returned.",
                            "enum": [
                                "",
                                "type",
                                "genre"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "",
                                "type",
                                "genre"
                            ]
                        },
                        "filter": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Field content that determines which results are returned. Like a WHERE clause in an SQL statement, this parameter selects only results with fields that meet your criteria. See written docs.",
                            "location": "query"
                        },
                        "clu": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Service ID of a television service that has upcoming movies or TV series you want to match against. For example 63612.",
                            "location": "query"
                        },
                        "start": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "If you specify the clu parameter, start specifies the start of the broadcast time window. For example 20120315140000Z.",
                            "location": "query"
                        },
                        "end": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "If you specify the clu parameter, end specifies the end of the broadcast time window. For example 20120315140000Z.",
                            "location": "query"
                        },
                        "rep": {
                            "type": "integer",
                            "required": false,
                            "default": 1,
                            "description": "If you specify the clu parameter, rep specifies the maximum number of broadcasts to be reported in the availabilities object. For example rep=5 returns up to 5 broadcasts.",
                            "location": "query"
                        },
                        "include": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Additional data to include in each result returned. For multiple include values, separate the values with commas like this: include=movie:moods,crew.",
                            "location": "query"
                        },
                        "size": {
                            "type": "integer",
                            "required": false,
                            "default": 20,
                            "description": "The number of items you want to be returned",
                            "location": "query"
                        },
                        "offset": {
                            "type": "integer",
                            "required": false,
                            "default": 0,
                            "description": "Counting from zero as the first item in the returned list, the number of the first item you want.",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Search.FilterBrowse"
                }
            }
        },
        "Recommendations": {
            "methods": {
                "Similar": {
                    "path": "recs/v2.1{endpoint}/similar",
                    "httpMethod": "GET",
                    "description": "Returns similar items in order of similarity and popularity. Please specify a value for albumid, amgvideoid, cosmoprogramid, or nameid. Fields in bold are required.",
                    "parameters": {
                        "endpoint": {
                            "type": "string",
                            "required": true,
                            "default": "",
                            "description": "Database to search",
                            "enum": [
                                "music",
                                "amgvideo",
                                "video"
                            ],
                            "enumDescriptions": [
                                "music",
                                "amgvideo (movies and TV series on DVD)",
                                "video (TV)"
                            ],
                            "location": "path"
                        },
                        "entitytype": {
                            "type": "string",
                            "required": true,
                            "default": "",
                            "description": "Type of content to search for",
                            "enum": [
                                "album",
                                "artist",
                                "movie",
                                "tvseries",
                                "movie",
                                "tvseries"
                            ],
                            "enumDescriptions": [
                                "album",
                                "artist (music)",
                                "movie (on DVD)",
                                "tvseries (on DVD)",
                                "movie (on TV)",
                                "tvseries (on TV)"
                            ],
                            "location": "query"
                        },
                        "albumid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for an album, consisting of the prefix MW followed by a ten-digit number. For a request with an album ID, specify an endpoint of music and an entitytype of album.",
                            "location": "query"
                        },
                        "amgvideoid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "AMG database ID for a movie or TV series, consisting of a ten-character string that starts with V and is followed by 9 digits with leading spaces. For a request with an amgvideo ID, specify an endpoint of amgvideo and an entitytype of movie or tvseries.",
                            "location": "query"
                        },
                        "cosmoprogramid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Cosmo database ID for a movie or television series. For a request with a Cosmo ID, specify an endpoint of video and an entitytype of movie or tvseries.",
                            "location": "query"
                        },
                        "nameid": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Rovi Music ID for a person or group, consisting of the prefix MN followed by a ten-digit number. For a request with a name ID, specify an endpoint of music and an entitytype of artist.",
                            "location": "query"
                        },
                        "filter": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Field content that determines which results are returned. Like a WHERE clause in an SQL statement, this parameter selects only results with fields that meet your criteria. See written docs.",
                            "location": "query"
                        },
                        "clu": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Service ID of a television service that has upcoming movies or TV series you want to match against. For example 63612.",
                            "location": "query"
                        },
                        "start": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "If you specify the clu parameter, start specifies the start of the broadcast time window. For example 20120315140000Z.",
                            "location": "query"
                        },
                        "end": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "If you specify the clu parameter, end specifies the end of the broadcast time window. For example 20120315140000Z.",
                            "location": "query"
                        },
                        "rep": {
                            "type": "integer",
                            "required": false,
                            "default": 1,
                            "description": "If you specify the clu parameter, rep specifies the maximum number of broadcasts to be reported in the availabilities object. For example rep=5 returns up to 5 broadcasts.",
                            "location": "query"
                        },
                        "size": {
                            "type": "integer",
                            "required": false,
                            "default": 20,
                            "description": "The number of items you want to be returned",
                            "location": "query"
                        },
                        "country": {
                            "type": "string",
                            "required": false,
                            "default": "US",
                            "description": "Country of the language of the response. The current release of the API only supports US.",
                            "location": "query"
                        },
                        "language": {
                            "type": "string",
                            "required": false,
                            "default": "en",
                            "description": "Language of the response data. This request only supports en (English).",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Recommendations.Similar"
                }
            }
        },
        "Match": {
            "methods": {
                "MatchVideo": {
                    "path": "recognition/v2.1/{catalog}/match/video",
                    "httpMethod": "GET",
                    "description": "Matches title and field-level criteria against movies, TV series, and TV programs in Rovi Cloud Services and returns results in order of match. Fields in bold are required.",
                    "parameters": {
                        "catalog": {
                            "type": "string",
                            "required": true,
                            "default": "",
                            "description": "Database to match against.",
                            "enum": [
                                "amgvideo",
                                "video"
                            ],
                            "enumDescriptions": [
                                "amgvideo (movies and TV series on DVD)",
                                "video (TV)"
                            ],
                            "location": "path"
                        },
                        "entitytype": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Type of content to search for",
                            "enum": [
                                "movie",
                                "tvseries",
                                "movie",
                                "tvseries",
                                "onetimeonly"
                            ],
                            "enumDescriptions": [
                                "movie (on DVD)",
                                "tvseries (on DVD)",
                                "movie (on TV)",
                                "tvseries (on TV)",
                                "onetimeonly (on TV)"
                            ],
                            "location": "query"
                        },
                        "title": {
                            "type": "string",
                            "required": true,
                            "default": "",
                            "description": "Title of a movie, television program, or television series, or keywords from the title.",
                            "location": "query"
                        },
                        "releaseyear": {
                            "type": "integer",
                            "required": false,
                            "default": "",
                            "description": "Year the title was released.",
                            "location": "query"
                        },
                        "runtime": {
                            "type": "integer",
                            "required": false,
                            "default": "",
                            "description": "Length of the title in minutes.",
                            "location": "query"
                        },
                        "rating": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "MPAA movie rating or US TV rating.",
                            "enum": [
                                "None",
                                "TV-Y",
                                "TV-Y7",
                                "TV-G",
                                "TV-PG",
                                "TV-14",
                                "TV-MA",
                                "NR",
                                "G",
                                "PG",
                                "PG-13",
                                "R",
                                "NC-17",
                                "X"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "None",
                                "TV-Y",
                                "TV-Y7",
                                "TV-G",
                                "TV-PG",
                                "TV-14",
                                "TV-MA",
                                "NR",
                                "G",
                                "PG",
                                "PG-13",
                                "R",
                                "NC-17",
                                "X"
                            ]
                        },
                        "include": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Additional data to include in each result returned. For multiple include values, separate the values with commas like this: include=movie:moods,crew.",
                            "location": "query"
                        },
                        "size": {
                            "type": "integer",
                            "required": false,
                            "default": 20,
                            "description": "The number of items you want to be returned",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Match.MatchVideo"
                },
                "MatchName": {
                    "path": "recognition/v2.1/{catalog}/match/name",
                    "httpMethod": "GET",
                    "description": "Matches name and field-level criteria against people and groups in Rovi Cloud Services and returns results in order of match. Fields in bold are required.",
                    "parameters": {
                        "catalog": {
                            "type": "string",
                            "required": true,
                            "default": "",
                            "description": "Database to match against.",
                            "enum": [
                                "music",
                                "amgvideo",
                                "video"
                            ],
                            "enumDescriptions": [
                                "music",
                                "amgvideo (movies and TV series on DVD)",
                                "video (TV)"
                            ],
                            "location": "path"
                        },
                        "name": {
                            "type": "string",
                            "required": true,
                            "default": "",
                            "description": "Name of the person or group",
                            "location": "query"
                        },
                        "birthdate": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Date of birth in YYYYMMDD format.",
                            "location": "query"
                        },
                        "deathdate": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Date of death in YYYYMMDD format.",
                            "location": "query"
                        },
                        "include": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Additional data to include in each result returned. To include images of a person, for example, specify include=images.",
                            "location": "query"
                        },
                        "size": {
                            "type": "integer",
                            "required": false,
                            "default": 20,
                            "description": "The number of items you want to be returned",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Match.MatchName"
                },
                "MatchTrack": {
                    "path": "recognition/v2.1/music/match/track",
                    "httpMethod": "GET",
                    "description": "Matches title and field-level criteria against songs in Rovi Cloud Services and returns results in order of match. Fields in bold are required.",
                    "parameters": {
                        "name": {
                            "type": "string",
                            "required": true,
                            "default": "",
                            "description": "Keywords from the song title.",
                            "location": "query"
                        },
                        "performername": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Name of a performer on the song.",
                            "location": "query"
                        },
                        "albumtitle": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Keywords from the album title.",
                            "location": "query"
                        },
                        "isrc": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "International Standard Recording Code (ISRC) for a song recording.",
                            "location": "query"
                        },
                        "seconds": {
                            "type": "integer",
                            "required": false,
                            "default": "",
                            "description": "Playing time in seconds.",
                            "location": "query"
                        },
                        "sequencenumber": {
                            "type": "integer",
                            "required": false,
                            "default": "",
                            "description": "Number of the track on the album.",
                            "location": "query"
                        },
                        "medianumber": {
                            "type": "integer",
                            "required": false,
                            "default": "",
                            "description": "Number of the disc in the series that the track is on.",
                            "location": "query"
                        },
                        "include": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Additional data to include in each result returned. To include album appearances in the response, for example, add include=appearances.",
                            "location": "query"
                        },
                        "size": {
                            "type": "integer",
                            "required": false,
                            "default": 20,
                            "description": "The number of items you want to be returned",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Match.MatchTrack"
                },
                "MatchAlbum": {
                    "path": "recognition/v2.1/music/match/album",
                    "httpMethod": "GET",
                    "description": "Matches title and field-level criteria against albums in Rovi Cloud Services and returns results in order of match. Fields in bold are required.",
                    "parameters": {
                        "name": {
                            "type": "string",
                            "required": true,
                            "default": "",
                            "description": "Keywords from the album title",
                            "location": "query"
                        },
                        "performername": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Name of a performer on the song.",
                            "location": "query"
                        },
                        "labelname": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Record company that released the album.",
                            "location": "query"
                        },
                        "upc": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Universal Product Code (UPC) for an item.",
                            "location": "query"
                        },
                        "ean": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "EAN code of the release.",
                            "location": "query"
                        },
                        "numtracks": {
                            "type": "integer",
                            "required": false,
                            "default": "",
                            "description": "Number of tracks on the album.",
                            "location": "query"
                        },
                        "releasedate": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Date the album was released in YYYYMMDD format.",
                            "location": "query"
                        },
                        "include": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Additional data to include in each result returned. To include images of the album in the response, for example, add include=images.",
                            "location": "query"
                        },
                        "size": {
                            "type": "integer",
                            "required": false,
                            "default": 20,
                            "description": "The number of items you want to be returned",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Match.MatchAlbum"
                },
                "MatchFilename": {
                    "path": "recognition/v2.1/{catalog}/match/filename",
                    "httpMethod": "GET",
                    "description": "Locates information in Rovi Cloud Services that is related to the song, movie, or TV series files on your CDs, DVDs, and other entertainment media. Fields in bold are required.",
                    "parameters": {
                        "catalog": {
                            "type": "string",
                            "required": true,
                            "default": "",
                            "description": "Database to match against.",
                            "enum": [
                                "music",
                                "video"
                            ],
                            "enumDescriptions": [
                                "music",
                                "video (TV)"
                            ],
                            "location": "path"
                        },
                        "entitytype": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "For a catalog type of video, categories that further narrow the type of content to match against.",
                            "enum": [
                                "tvseries",
                                "movie"
                            ],
                            "enumDescriptions": [
                                "tvseries (video endpoint only)",
                                "movie (video endpoint only)"
                            ],
                            "location": "query"
                        },
                        "name": {
                            "type": "string",
                            "required": true,
                            "default": "",
                            "description": "URL-encoded name of the file.",
                            "location": "query"
                        },
                        "include": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Additional data to include in each result returned. To include cast members in movie results, for example, specify include=movie:cast.",
                            "location": "query"
                        },
                        "size": {
                            "type": "integer",
                            "required": false,
                            "default": 20,
                            "description": "The number of items you want to be returned",
                            "location": "query"
                        },
                        "format": {
                            "type": "string",
                            "required": false,
                            "default": "json",
                            "description": "Format of the returned data",
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "location": "query",
                            "enumDescriptions": [
                                "json",
                                "xml"
                            ]
                        }
                    },
                    "id": "Match.MatchFilename"
                }
            }
        }
    }
}
